// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class UserAuthorized extends ethereum.Event {
  get params(): UserAuthorized__Params {
    return new UserAuthorized__Params(this);
  }
}

export class UserAuthorized__Params {
  _event: UserAuthorized;

  constructor(event: UserAuthorized) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class UserRegistry extends ethereum.SmartContract {
  static bind(address: Address): UserRegistry {
    return new UserRegistry("UserRegistry", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isMerchant(_user: Address): boolean {
    let result = super.call("isMerchant", "isMerchant(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_isMerchant(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMerchant", "isMerchant(address):(bool)", [
      ethereum.Value.fromAddress(_user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  userRoles(param0: Address): i32 {
    let result = super.call("userRoles", "userRoles(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toI32();
  }

  try_userRoles(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall("userRoles", "userRoles(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AuthorizeMerchantCall extends ethereum.Call {
  get inputs(): AuthorizeMerchantCall__Inputs {
    return new AuthorizeMerchantCall__Inputs(this);
  }

  get outputs(): AuthorizeMerchantCall__Outputs {
    return new AuthorizeMerchantCall__Outputs(this);
  }
}

export class AuthorizeMerchantCall__Inputs {
  _call: AuthorizeMerchantCall;

  constructor(call: AuthorizeMerchantCall) {
    this._call = call;
  }

  get _merchant(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AuthorizeMerchantCall__Outputs {
  _call: AuthorizeMerchantCall;

  constructor(call: AuthorizeMerchantCall) {
    this._call = call;
  }
}
